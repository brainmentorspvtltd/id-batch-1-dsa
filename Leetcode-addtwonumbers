/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int carry = 0;
        ListNode head  = null;
        ListNode tail = null;
        while(l1!=null || l2!=null || carry!=0){
            int first = l1==null?0: l1.val;
            int second = l2==null?0: l2.val;
            int sum = first + second + carry;
            carry = sum/ 10;
            int digit = sum % 10;
            ListNode node = new ListNode(digit);
            if(head == null){
                tail = head =node;
            }
            else{
                tail.next = node;
                tail = node;
            }
            if(l1!=null){
                l1 = l1.next;
            }
            if(l2!=null){
                l2 = l2.next;
            }
        }
        return head;
    }
}
